#include <bits/stdc++.h>
using namespace std;
class BST{
    int data;
    BST *left,*right;
    public:
    BST();
    BST(int val);
    BST* Insert(BST* root,int value){
    if(!root) return new BST(value);
    if(value>root->data){
        root->right=Insert(root->right,value);
    }
    else{
        root->left=Insert(root->left,value);
    }
    return root;
    }
    void Inorder(BST*);
};
BST::BST(){
    data=0;
    left=NULL;
    right=NULL;
}
BST::BST(int val){
    data=val;
    left=NULL;
    right=NULL;
}
void BST::Inorder(BST* root){
    if(!root) return;
    Inorder(root->left);
    cout<<root->data<<" ";
    Inorder(root->right);
}
int main() {
    BST b, *root=NULL;
    root=b.Insert(root,50);
    b.Insert(root,50);
    b.Insert(root,70);
    b.Insert(root,20);
    b.Insert(root,90);
    b.Insert(root,3);
    b.Insert(root,0);
    b.Insert(root,12);
    b.Inorder(root);
    return 0;
}
